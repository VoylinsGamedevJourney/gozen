#!/usr/bin/env python
import os
import sys
import platform as os_platform


env = SConscript('godot_cpp/SConstruct')
env.Append(CPPPATH=['gde_gozen'])
platform = ARGUMENTS.get('platform', 'linux')


if 'linux' in platform:
    if not os.path.exists("bin/linux"):
        print("You need to compile FFmpeg first!")
        sys.exit(1)

    env.Append(
        LINKFLAGS=['-static-libstdc++'],
        CPPFLAGS=['-Iffmpeg/bin', '-Iffmpeg/bin/include'],
        LIBPATH=[
            'ffmpeg/bin/include/libavcodec', 'ffmpeg/bin/include/libavformat',
            'ffmpeg/bin/include/libavdevice', 'ffmpeg/bin/include/libavutil',
            'ffmpeg/bin/include/libswresample', 'ffmpeg/bin/include/libswscale',
            'ffmpeg/bin/lib'],
        LIBS=[
            'avcodec', 'avformat', 'avdevice',
            'avutil', 'swresample', 'swscale']
    )

elif 'windows' in platform:
    if not os.path.exists("bin/windows"):
        print("You need to compile FFmpeg first!")
        sys.exit(1)

    if os_platform.system().lower() == 'windows':
        env.Append(LIBS=[
            'avcodec.lib',
            'avformat.lib',
            'avdevice.lib',
            'avutil.lib',
            'swresample.lib',
            'swscale.lib'])
    else:
        env.Append(LIBS=[
            'avcodec', 'avformat', 'avdevice',
            'avutil', 'swresample', 'swscale']
        )

    env.Append(
        CPPPATH=['ffmpeg/bin/include'],
        LIBPATH=['ffmpeg/bin/bin']
    )


src = Glob('gde_gozen/*.cpp')
libpath = 'bin/{}/libgozen{}{}'.format(
    platform,
    env['suffix'],
    env['SHLIBSUFFIX']
)

sharedlib = env.SharedLibrary(libpath, src)
Default(sharedlib)
